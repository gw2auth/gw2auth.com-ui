name: 'Build, Test, Deploy'

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
      - beta

env:
  NODE_VERSION: '18'
  WORKSPACE_ARTIFACT_UI: 'gw2auth_ui_resources'
  WORKSPACE_ARTIFACT_CDK: 'cdk_synth'

jobs:
  build_ui:
    name: 'Build UI'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup node ${{ env.NODE_VERSION }}'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Install npm dependencies'
        run: (cd angular && npm install)
      - name: 'Build UI'
        run: (cd angular && npm run build)
      - name: 'Prepare UI resources bundle'
        run: (cd angular/dist && zip -r ../gw2auth_ui_resources.zip .)
      - name: 'Store UI artifact'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.WORKSPACE_ARTIFACT_UI }}
          path: 'angular/gw2auth_ui_resources.zip'
          retention-days: 1

  build_and_synth_cdk:
    name: 'Build and synth cdk'
    runs-on: ubuntu-latest
    needs:
      - build_ui
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'SSH Key for CDK'
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.CDK_SSH_KEY }}
      - name: 'Checkout submodules'
        run: git submodule update --init --recursive --remote
      - name: 'Download UI artifact'
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.WORKSPACE_ARTIFACT_UI }}
          path: ./cdk
      - name: 'Setup node ${{ env.NODE_VERSION }}'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Install cdk'
        run: npm install -g aws-cdk
      - name: 'Install npm dependencies'
        run: (cd cdk && npm install)
      - name: 'Build cdk app'
        run: (cd cdk && npm run build)
      - name: 'Synth cdk'
        env:
          GW2AUTH_CLOUDFRONT: true
        run: (cd cdk && cdk synth --app "npx ts-node --prefer-ts-exts bin/cdk_ui.ts")
      - name: 'Store cdk synth artifact'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.WORKSPACE_ARTIFACT_CDK }}
          path: |
            cdk/cdk.out/
            cdk/cdk.json
          retention-days: 1

  deploy:
    name: 'Deploy'
    if: github.ref == 'refs/heads/beta' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: ${{ (github.ref == 'refs/heads/beta' && 'beta') || (github.ref == 'refs/heads/main' && 'prod') || 'unknown' }}
    needs:
      - build_ui
      - build_and_synth_cdk
    steps:
      - name: 'Download cdk synth artifact'
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.WORKSPACE_ARTIFACT_CDK }}
          path: .
      - name: 'Setup node ${{ env.NODE_VERSION }}'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Install cdk'
        run: npm install -g aws-cdk
      - name: 'AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_CDK_ROLE }}
          aws-region: ${{ secrets.AWS_CDK_REGION }}
      - name: 'Deploy beta'
        if: github.ref == 'refs/heads/beta'
        run: (cdk --app ./cdk.out deploy --require-approval never Gw2AuthCloudfrontCdkStack-Beta Gw2AuthUIResources-Beta)
      - name: 'Deploy prod'
        if: github.ref == 'refs/heads/main'
        run: (cdk --app ./cdk.out deploy --require-approval never Gw2AuthCloudfrontCdkStack-Prod Gw2AuthUIResources-Prod)

  create_pull_request:
    name: 'Create PR'
    if: github.ref == 'refs/heads/beta'
    runs-on: ubuntu-latest
    needs:
      - deploy
    permissions:
      pull-requests: write
    steps:
      - name: 'Create PR'
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: '[CI] Merge beta into main',
              owner: owner,
              repo: repo,
              head: '${{ github.ref_name }}',
              base: 'main',
              body: 'This PR is auto-generated by\n[actions/github-script](https://github.com/actions/github-script)'
            });
